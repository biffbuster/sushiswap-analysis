import { createRequire } from 'module'; const require = createRequire(import.meta.url);
var D=Object.defineProperty;var V=(a,t,e)=>t in a?D(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e;var u=(a,t,e)=>(V(a,typeof t!="symbol"?t+"":t,e),e);import{BigDecimal as j,Gauge as A}from"@sentio/sdk";import{addContractByABI as X,getContractByABI as z,addProcessor as G,getProcessor as K,getProvider as q,transformEtherError as s,BaseProcessor as J,BaseProcessorTemplate as Zt,BoundContractView as Z,ContractView as $,DummyProvider as tt,getNetworkFromCtxOrNetworkish as et}from"@sentio/sdk/eth";import{Contract as N,Interface as _}from"ethers";var x=[{inputs:[{internalType:"contract IERC20",name:"wethToken_",type:"address"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"masterContract",type:"address"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!0,internalType:"address",name:"cloneAddress",type:"address"}],name:"LogDeploy",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"share",type:"uint256"}],name:"LogDeposit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"borrower",type:"address"},{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"feeAmount",type:"uint256"},{indexed:!0,internalType:"address",name:"receiver",type:"address"}],name:"LogFlashLoan",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"protocol",type:"address"}],name:"LogRegisterProtocol",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"masterContract",type:"address"},{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"LogSetMasterContractApproval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"LogStrategyDivest",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"LogStrategyInvest",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"LogStrategyLoss",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"LogStrategyProfit",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!0,internalType:"contract IStrategy",name:"strategy",type:"address"}],name:"LogStrategyQueued",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!0,internalType:"contract IStrategy",name:"strategy",type:"address"}],name:"LogStrategySet",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!1,internalType:"uint256",name:"targetPercentage",type:"uint256"}],name:"LogStrategyTargetPercentage",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"share",type:"uint256"}],name:"LogTransfer",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"masterContract",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"LogWhiteListMasterContract",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"contract IERC20",name:"token",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"uint256",name:"share",type:"uint256"}],name:"LogWithdraw",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"bytes[]",name:"calls",type:"bytes[]"},{internalType:"bool",name:"revertOnFail",type:"bool"}],name:"batch",outputs:[{internalType:"bool[]",name:"successes",type:"bool[]"},{internalType:"bytes[]",name:"results",type:"bytes[]"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IBatchFlashBorrower",name:"borrower",type:"address"},{internalType:"address[]",name:"receivers",type:"address[]"},{internalType:"contract IERC20[]",name:"tokens",type:"address[]"},{internalType:"uint256[]",name:"amounts",type:"uint256[]"},{internalType:"bytes",name:"data",type:"bytes"}],name:"batchFlashLoan",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"claimOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"masterContract",type:"address"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bool",name:"useCreate2",type:"bool"}],name:"deploy",outputs:[{internalType:"address",name:"cloneAddress",type:"address"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token_",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"share",type:"uint256"}],name:"deposit",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"shareOut",type:"uint256"}],stateMutability:"payable",type:"function"},{inputs:[{internalType:"contract IFlashBorrower",name:"borrower",type:"address"},{internalType:"address",name:"receiver",type:"address"},{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"flashLoan",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"bool",name:"balance",type:"bool"},{internalType:"uint256",name:"maxChangeAmount",type:"uint256"}],name:"harvest",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"masterContractApproved",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"masterContractOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"pendingOwner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"",type:"address"}],name:"pendingStrategy",outputs:[{internalType:"contract IStrategy",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permitToken",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"registerProtocol",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"user",type:"address"},{internalType:"address",name:"masterContract",type:"address"},{internalType:"bool",name:"approved",type:"bool"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"setMasterContractApproval",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"contract IStrategy",name:"newStrategy",type:"address"}],name:"setStrategy",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint64",name:"targetPercentage_",type:"uint64"}],name:"setStrategyTargetPercentage",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"",type:"address"}],name:"strategy",outputs:[{internalType:"contract IStrategy",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"",type:"address"}],name:"strategyData",outputs:[{internalType:"uint64",name:"strategyStartDate",type:"uint64"},{internalType:"uint64",name:"targetPercentage",type:"uint64"},{internalType:"uint128",name:"balance",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"share",type:"uint256"},{internalType:"bool",name:"roundUp",type:"bool"}],name:"toAmount",outputs:[{internalType:"uint256",name:"amount",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bool",name:"roundUp",type:"bool"}],name:"toShare",outputs:[{internalType:"uint256",name:"share",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"",type:"address"}],name:"totals",outputs:[{internalType:"uint128",name:"elastic",type:"uint128"},{internalType:"uint128",name:"base",type:"uint128"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"share",type:"uint256"}],name:"transfer",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address[]",name:"tos",type:"address[]"},{internalType:"uint256[]",name:"shares",type:"uint256[]"}],name:"transferMultiple",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"},{internalType:"bool",name:"direct",type:"bool"},{internalType:"bool",name:"renounce",type:"bool"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"masterContract",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"whitelistMasterContract",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"whitelistedMasterContracts",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"contract IERC20",name:"token_",type:"address"},{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"share",type:"uint256"}],name:"withdraw",outputs:[{internalType:"uint256",name:"amountOut",type:"uint256"},{internalType:"uint256",name:"shareOut",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{stateMutability:"payable",type:"receive"}],d=class{static createInterface(){return new _(x)}static connect(t,e){return new N(t,x,e)}};u(d,"abi",x);import{Contract as Et,Interface as St}from"ethers";import{Contract as W,Interface as H}from"ethers";var E=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount0",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1",type:"uint256"},{indexed:!0,internalType:"address",name:"to",type:"address"}],name:"Burn",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount0",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1",type:"uint256"}],name:"Mint",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"sender",type:"address"},{indexed:!1,internalType:"uint256",name:"amount0In",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1In",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount0Out",type:"uint256"},{indexed:!1,internalType:"uint256",name:"amount1Out",type:"uint256"},{indexed:!0,internalType:"address",name:"to",type:"address"}],name:"Swap",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint112",name:"reserve0",type:"uint112"},{indexed:!1,internalType:"uint112",name:"reserve1",type:"uint112"}],name:"Sync",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[],name:"DOMAIN_SEPARATOR",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"MINIMUM_LIQUIDITY",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"PERMIT_TYPEHASH",outputs:[{internalType:"bytes32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"address",name:"",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"}],name:"burn",outputs:[{internalType:"uint256",name:"amount0",type:"uint256"},{internalType:"uint256",name:"amount1",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"view",type:"function"},{inputs:[],name:"factory",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"getReserves",outputs:[{internalType:"uint112",name:"_reserve0",type:"uint112"},{internalType:"uint112",name:"_reserve1",type:"uint112"},{internalType:"uint32",name:"_blockTimestampLast",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"_token0",type:"address"},{internalType:"address",name:"_token1",type:"address"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"kLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"}],name:"mint",outputs:[{internalType:"uint256",name:"liquidity",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"nonces",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"},{internalType:"uint256",name:"deadline",type:"uint256"},{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"}],name:"permit",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"price0CumulativeLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"price1CumulativeLast",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"}],name:"skim",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount0Out",type:"uint256"},{internalType:"uint256",name:"amount1Out",type:"uint256"},{internalType:"address",name:"to",type:"address"},{internalType:"bytes",name:"data",type:"bytes"}],name:"swap",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"sync",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"token0",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"token1",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"}],y=class{static createInterface(){return new H(E)}static connect(t,e){return new W(t,E,e)}};u(y,"abi",E);import{Contract as At,Interface as Vt}from"ethers";var c=y.connect("0x0",tt),L=class extends ${constructor(t){super(t)}async DOMAIN_SEPARATOR(t){try{return await this.contract.getFunction("DOMAIN_SEPARATOR()")(t||{})}catch(e){throw s(e,void 0)}}async MINIMUM_LIQUIDITY(t){try{return await this.contract.getFunction("MINIMUM_LIQUIDITY()")(t||{})}catch(e){throw s(e,void 0)}}async PERMIT_TYPEHASH(t){try{return await this.contract.getFunction("PERMIT_TYPEHASH()")(t||{})}catch(e){throw s(e,void 0)}}async allowance(t,e,n){try{return await this.contract.getFunction("allowance(address,address)")(t,e,n||{})}catch(r){throw s(r,void 0)}}async balanceOf(t,e){try{return await this.contract.getFunction("balanceOf(address)")(t,e||{})}catch(n){throw s(n,void 0)}}async decimals(t){try{return await this.contract.getFunction("decimals()")(t||{})}catch(e){throw s(e,void 0)}}async factory(t){try{return await this.contract.getFunction("factory()")(t||{})}catch(e){throw s(e,void 0)}}async getReserves(t){try{return await this.contract.getFunction("getReserves()")(t||{})}catch(e){throw s(e,void 0)}}async kLast(t){try{return await this.contract.getFunction("kLast()")(t||{})}catch(e){throw s(e,void 0)}}async name(t){try{return await this.contract.getFunction("name()")(t||{})}catch(e){throw s(e,void 0)}}async nonces(t,e){try{return await this.contract.getFunction("nonces(address)")(t,e||{})}catch(n){throw s(n,void 0)}}async price0CumulativeLast(t){try{return await this.contract.getFunction("price0CumulativeLast()")(t||{})}catch(e){throw s(e,void 0)}}async price1CumulativeLast(t){try{return await this.contract.getFunction("price1CumulativeLast()")(t||{})}catch(e){throw s(e,void 0)}}async symbol(t){try{return await this.contract.getFunction("symbol()")(t||{})}catch(e){throw s(e,void 0)}}async token0(t){try{return await this.contract.getFunction("token0()")(t||{})}catch(e){throw s(e,void 0)}}async token1(t){try{return await this.contract.getFunction("token1()")(t||{})}catch(e){throw s(e,void 0)}}async totalSupply(t){try{return await this.contract.getFunction("totalSupply()")(t||{})}catch(e){throw s(e,void 0)}}},w=class extends Z{async DOMAIN_SEPARATOR(t){return!t&&this.context&&(t={blockTag:this.context.blockNumber}),await this.view.DOMAIN_SEPARATOR(t||{})}async MINIMUM_LIQUIDITY(t){return!t&&this.context&&(t={blockTag:this.context.blockNumber}),await this.view.MINIMUM_LIQUIDITY(t||{})}async PERMIT_TYPEHASH(t){return!t&&this.context&&(t={blockTag:this.context.blockNumber}),await this.view.PERMIT_TYPEHASH(t||{})}async allowance(t,e,n){return!n&&this.context&&(n={blockTag:this.context.blockNumber}),await this.view.allowance(t,e,n||{})}async balanceOf(t,e){return!e&&this.context&&(e={blockTag:this.context.blockNumber}),await this.view.balanceOf(t,e||{})}async decimals(t){return!t&&this.context&&(t={blockTag:this.context.blockNumber}),await this.view.decimals(t||{})}async factory(t){return!t&&this.context&&(t={blockTag:this.context.blockNumber}),await this.view.factory(t||{})}async getReserves(t){return!t&&this.context&&(t={blockTag:this.context.blockNumber}),await this.view.getReserves(t||{})}async kLast(t){return!t&&this.context&&(t={blockTag:this.context.blockNumber}),await this.view.kLast(t||{})}async name(t){return!t&&this.context&&(t={blockTag:this.context.blockNumber}),await this.view.name(t||{})}async nonces(t,e){return!e&&this.context&&(e={blockTag:this.context.blockNumber}),await this.view.nonces(t,e||{})}async price0CumulativeLast(t){return!t&&this.context&&(t={blockTag:this.context.blockNumber}),await this.view.price0CumulativeLast(t||{})}async price1CumulativeLast(t){return!t&&this.context&&(t={blockTag:this.context.blockNumber}),await this.view.price1CumulativeLast(t||{})}async symbol(t){return!t&&this.context&&(t={blockTag:this.context.blockNumber}),await this.view.symbol(t||{})}async token0(t){return!t&&this.context&&(t={blockTag:this.context.blockNumber}),await this.view.token0(t||{})}async token1(t){return!t&&this.context&&(t={blockTag:this.context.blockNumber}),await this.view.token1(t||{})}async totalSupply(t){return!t&&this.context&&(t={blockTag:this.context.blockNumber}),await this.view.totalSupply(t||{})}},S=class extends J{onEventApproval(t,e,n){return e||(e=c.filters["Approval(address,address,uint256)"](null,null,null)),super.onEvent(t,e,n)}onEventBurn(t,e,n){return e||(e=c.filters["Burn(address,uint256,uint256,address)"](null,null,null,null)),super.onEvent(t,e,n)}onEventMint(t,e,n){return e||(e=c.filters["Mint(address,uint256,uint256)"](null,null,null)),super.onEvent(t,e,n)}onEventSwap(t,e,n){return e||(e=c.filters["Swap(address,uint256,uint256,uint256,uint256,address)"](null,null,null,null,null,null)),super.onEvent(t,e,n)}onEventSync(t,e,n){return e||(e=c.filters["Sync(uint112,uint112)"](null,null)),super.onEvent(t,e,n)}onEventTransfer(t,e,n){return e||(e=c.filters["Transfer(address,address,uint256)"](null,null,null)),super.onEvent(t,e,n)}onCallDOMAIN_SEPARATOR(t,e){return super.onTrace("0x3644e515",t,e)}onCallMINIMUM_LIQUIDITY(t,e){return super.onTrace("0xba9a7a56",t,e)}onCallPERMIT_TYPEHASH(t,e){return super.onTrace("0x30adf81f",t,e)}onCallAllowance(t,e){return super.onTrace("0xdd62ed3e",t,e)}onCallApprove(t,e){return super.onTrace("0x095ea7b3",t,e)}onCallBalanceOf(t,e){return super.onTrace("0x70a08231",t,e)}onCallBurn(t,e){return super.onTrace("0x89afcb44",t,e)}onCallDecimals(t,e){return super.onTrace("0x313ce567",t,e)}onCallFactory(t,e){return super.onTrace("0xc45a0155",t,e)}onCallGetReserves(t,e){return super.onTrace("0x0902f1ac",t,e)}onCallInitialize(t,e){return super.onTrace("0x485cc955",t,e)}onCallKLast(t,e){return super.onTrace("0x7464fc3d",t,e)}onCallMint(t,e){return super.onTrace("0x6a627842",t,e)}onCallName(t,e){return super.onTrace("0x06fdde03",t,e)}onCallNonces(t,e){return super.onTrace("0x7ecebe00",t,e)}onCallPermit(t,e){return super.onTrace("0xd505accf",t,e)}onCallPrice0CumulativeLast(t,e){return super.onTrace("0x5909c0d5",t,e)}onCallPrice1CumulativeLast(t,e){return super.onTrace("0x5a3d5493",t,e)}onCallSkim(t,e){return super.onTrace("0xbc25cf77",t,e)}onCallSwap(t,e){return super.onTrace("0x022c0d9f",t,e)}onCallSymbol(t,e){return super.onTrace("0x95d89b41",t,e)}onCallSync(t,e){return super.onTrace("0xfff6cae9",t,e)}onCallToken0(t,e){return super.onTrace("0x0dfe1681",t,e)}onCallToken1(t,e){return super.onTrace("0xd21220a7",t,e)}onCallTotalSupply(t,e){return super.onTrace("0x18160ddd",t,e)}onCallTransfer(t,e){return super.onTrace("0xa9059cbb",t,e)}onCallTransferFrom(t,e){return super.onTrace("0x23b872dd",t,e)}CreateBoundContractView(){let t=k(this.config.network,this.config.address);return new w(this.config.address,t)}static bind(t){t.name||(t.name="Sushipair");let e=K(t);return e||(e=new S(t),G(t,e)),e}},T=S;u(T,"filters",{Approval(t,e,n){return c.filters["Approval(address,address,uint256)"](t,e,n)},Burn(t,e,n,r){return c.filters["Burn(address,uint256,uint256,address)"](t,e,n,r)},Mint(t,e,n){return c.filters["Mint(address,uint256,uint256)"](t,e,n)},Swap(t,e,n,r,o,m){return c.filters["Swap(address,uint256,uint256,uint256,uint256,address)"](t,e,n,r,o,m)},Sync(t,e){return c.filters["Sync(uint112,uint112)"](t,e)},Transfer(t,e,n){return c.filters["Transfer(address,address,uint256)"](t,e,n)}});function k(a,t){let e=et(a),n=z("Sushipair",t,e);if(!n){let r=y.connect(t,q(e));n=new L(r),X("Sushipair",t,e,n)}return n}import{addContractByABI as nt,getContractByABI as at,addProcessor as rt,getProcessor as it,getProvider as ot,transformEtherError as l,BaseProcessor as st,BaseProcessorTemplate as ye,BoundContractView as lt,ContractView as ct,DummyProvider as ut,getNetworkFromCtxOrNetworkish as pt}from"@sentio/sdk/eth";var i=d.connect("0x0",ut),P=class extends ct{constructor(t){super(t)}async DOMAIN_SEPARATOR(t){try{return await this.contract.getFunction("DOMAIN_SEPARATOR()")(t||{})}catch(e){throw l(e,void 0)}}async balanceOf(t,e,n){try{return await this.contract.getFunction("balanceOf(address,address)")(t,e,n||{})}catch(r){throw l(r,void 0)}}async masterContractApproved(t,e,n){try{return await this.contract.getFunction("masterContractApproved(address,address)")(t,e,n||{})}catch(r){throw l(r,void 0)}}async masterContractOf(t,e){try{return await this.contract.getFunction("masterContractOf(address)")(t,e||{})}catch(n){throw l(n,void 0)}}async nonces(t,e){try{return await this.contract.getFunction("nonces(address)")(t,e||{})}catch(n){throw l(n,void 0)}}async owner(t){try{return await this.contract.getFunction("owner()")(t||{})}catch(e){throw l(e,void 0)}}async pendingOwner(t){try{return await this.contract.getFunction("pendingOwner()")(t||{})}catch(e){throw l(e,void 0)}}async pendingStrategy(t,e){try{return await this.contract.getFunction("pendingStrategy(address)")(t,e||{})}catch(n){throw l(n,void 0)}}async strategy(t,e){try{return await this.contract.getFunction("strategy(address)")(t,e||{})}catch(n){throw l(n,void 0)}}async strategyData(t,e){try{return await this.contract.getFunction("strategyData(address)")(t,e||{})}catch(n){throw l(n,void 0)}}async toAmount(t,e,n,r){try{return await this.contract.getFunction("toAmount(address,uint256,bool)")(t,e,n,r||{})}catch(o){throw l(o,void 0)}}async toShare(t,e,n,r){try{return await this.contract.getFunction("toShare(address,uint256,bool)")(t,e,n,r||{})}catch(o){throw l(o,void 0)}}async totals(t,e){try{return await this.contract.getFunction("totals(address)")(t,e||{})}catch(n){throw l(n,void 0)}}async whitelistedMasterContracts(t,e){try{return await this.contract.getFunction("whitelistedMasterContracts(address)")(t,e||{})}catch(n){throw l(n,void 0)}}},O=class extends lt{async DOMAIN_SEPARATOR(t){return!t&&this.context&&(t={blockTag:this.context.blockNumber}),await this.view.DOMAIN_SEPARATOR(t||{})}async balanceOf(t,e,n){return!n&&this.context&&(n={blockTag:this.context.blockNumber}),await this.view.balanceOf(t,e,n||{})}async masterContractApproved(t,e,n){return!n&&this.context&&(n={blockTag:this.context.blockNumber}),await this.view.masterContractApproved(t,e,n||{})}async masterContractOf(t,e){return!e&&this.context&&(e={blockTag:this.context.blockNumber}),await this.view.masterContractOf(t,e||{})}async nonces(t,e){return!e&&this.context&&(e={blockTag:this.context.blockNumber}),await this.view.nonces(t,e||{})}async owner(t){return!t&&this.context&&(t={blockTag:this.context.blockNumber}),await this.view.owner(t||{})}async pendingOwner(t){return!t&&this.context&&(t={blockTag:this.context.blockNumber}),await this.view.pendingOwner(t||{})}async pendingStrategy(t,e){return!e&&this.context&&(e={blockTag:this.context.blockNumber}),await this.view.pendingStrategy(t,e||{})}async strategy(t,e){return!e&&this.context&&(e={blockTag:this.context.blockNumber}),await this.view.strategy(t,e||{})}async strategyData(t,e){return!e&&this.context&&(e={blockTag:this.context.blockNumber}),await this.view.strategyData(t,e||{})}async toAmount(t,e,n,r){return!r&&this.context&&(r={blockTag:this.context.blockNumber}),await this.view.toAmount(t,e,n,r||{})}async toShare(t,e,n,r){return!r&&this.context&&(r={blockTag:this.context.blockNumber}),await this.view.toShare(t,e,n,r||{})}async totals(t,e){return!e&&this.context&&(e={blockTag:this.context.blockNumber}),await this.view.totals(t,e||{})}async whitelistedMasterContracts(t,e){return!e&&this.context&&(e={blockTag:this.context.blockNumber}),await this.view.whitelistedMasterContracts(t,e||{})}},F=class extends st{onEventLogDeploy(t,e,n){return e||(e=i.filters["LogDeploy(address,bytes,address)"](null,null,null)),super.onEvent(t,e,n)}onEventLogDeposit(t,e,n){return e||(e=i.filters["LogDeposit(address,address,address,uint256,uint256)"](null,null,null,null,null)),super.onEvent(t,e,n)}onEventLogFlashLoan(t,e,n){return e||(e=i.filters["LogFlashLoan(address,address,uint256,uint256,address)"](null,null,null,null,null)),super.onEvent(t,e,n)}onEventLogRegisterProtocol(t,e,n){return e||(e=i.filters["LogRegisterProtocol(address)"](null)),super.onEvent(t,e,n)}onEventLogSetMasterContractApproval(t,e,n){return e||(e=i.filters["LogSetMasterContractApproval(address,address,bool)"](null,null,null)),super.onEvent(t,e,n)}onEventLogStrategyDivest(t,e,n){return e||(e=i.filters["LogStrategyDivest(address,uint256)"](null,null)),super.onEvent(t,e,n)}onEventLogStrategyInvest(t,e,n){return e||(e=i.filters["LogStrategyInvest(address,uint256)"](null,null)),super.onEvent(t,e,n)}onEventLogStrategyLoss(t,e,n){return e||(e=i.filters["LogStrategyLoss(address,uint256)"](null,null)),super.onEvent(t,e,n)}onEventLogStrategyProfit(t,e,n){return e||(e=i.filters["LogStrategyProfit(address,uint256)"](null,null)),super.onEvent(t,e,n)}onEventLogStrategyQueued(t,e,n){return e||(e=i.filters["LogStrategyQueued(address,address)"](null,null)),super.onEvent(t,e,n)}onEventLogStrategySet(t,e,n){return e||(e=i.filters["LogStrategySet(address,address)"](null,null)),super.onEvent(t,e,n)}onEventLogStrategyTargetPercentage(t,e,n){return e||(e=i.filters["LogStrategyTargetPercentage(address,uint256)"](null,null)),super.onEvent(t,e,n)}onEventLogTransfer(t,e,n){return e||(e=i.filters["LogTransfer(address,address,address,uint256)"](null,null,null,null)),super.onEvent(t,e,n)}onEventLogWhiteListMasterContract(t,e,n){return e||(e=i.filters["LogWhiteListMasterContract(address,bool)"](null,null)),super.onEvent(t,e,n)}onEventLogWithdraw(t,e,n){return e||(e=i.filters["LogWithdraw(address,address,address,uint256,uint256)"](null,null,null,null,null)),super.onEvent(t,e,n)}onEventOwnershipTransferred(t,e,n){return e||(e=i.filters["OwnershipTransferred(address,address)"](null,null)),super.onEvent(t,e,n)}onCallDOMAIN_SEPARATOR(t,e){return super.onTrace("0x3644e515",t,e)}onCallBalanceOf(t,e){return super.onTrace("0xf7888aec",t,e)}onCallBatch(t,e){return super.onTrace("0xd2423b51",t,e)}onCallBatchFlashLoan(t,e){return super.onTrace("0xf483b3da",t,e)}onCallClaimOwnership(t,e){return super.onTrace("0x4e71e0c8",t,e)}onCallDeploy(t,e){return super.onTrace("0x1f54245b",t,e)}onCallDeposit(t,e){return super.onTrace("0x02b9446c",t,e)}onCallFlashLoan(t,e){return super.onTrace("0xf1676d37",t,e)}onCallHarvest(t,e){return super.onTrace("0x66c6bb0b",t,e)}onCallMasterContractApproved(t,e){return super.onTrace("0x91e0eab5",t,e)}onCallMasterContractOf(t,e){return super.onTrace("0xbafe4f14",t,e)}onCallNonces(t,e){return super.onTrace("0x7ecebe00",t,e)}onCallOwner(t,e){return super.onTrace("0x8da5cb5b",t,e)}onCallPendingOwner(t,e){return super.onTrace("0xe30c3978",t,e)}onCallPendingStrategy(t,e){return super.onTrace("0x5108a558",t,e)}onCallPermitToken(t,e){return super.onTrace("0x7c516e94",t,e)}onCallRegisterProtocol(t,e){return super.onTrace("0xaee4d1b2",t,e)}onCallSetMasterContractApproval(t,e){return super.onTrace("0xc0a47c93",t,e)}onCallSetStrategy(t,e){return super.onTrace("0x72cb5d97",t,e)}onCallSetStrategyTargetPercentage(t,e){return super.onTrace("0x3e2a9d4e",t,e)}onCallStrategy(t,e){return super.onTrace("0x228bfd9f",t,e)}onCallStrategyData(t,e){return super.onTrace("0xdf23b45b",t,e)}onCallToAmount(t,e){return super.onTrace("0x56623118",t,e)}onCallToShare(t,e){return super.onTrace("0xda5139ca",t,e)}onCallTotals(t,e){return super.onTrace("0x4ffe34db",t,e)}onCallTransfer(t,e){return super.onTrace("0xf18d03cc",t,e)}onCallTransferMultiple(t,e){return super.onTrace("0x0fca8843",t,e)}onCallTransferOwnership(t,e){return super.onTrace("0x078dfbe7",t,e)}onCallWhitelistMasterContract(t,e){return super.onTrace("0x733a9d7c",t,e)}onCallWhitelistedMasterContracts(t,e){return super.onTrace("0x12a90c8a",t,e)}onCallWithdraw(t,e){return super.onTrace("0x97da6d30",t,e)}CreateBoundContractView(){let t=I(this.config.network,this.config.address);return new O(this.config.address,t)}static bind(t){t.name||(t.name="BentoBoxV1");let e=it(t);return e||(e=new F(t),rt(t,e)),e}},f=F;u(f,"filters",{LogDeploy(t,e,n){return i.filters["LogDeploy(address,bytes,address)"](t,e,n)},LogDeposit(t,e,n,r,o){return i.filters["LogDeposit(address,address,address,uint256,uint256)"](t,e,n,r,o)},LogFlashLoan(t,e,n,r,o){return i.filters["LogFlashLoan(address,address,uint256,uint256,address)"](t,e,n,r,o)},LogRegisterProtocol(t){return i.filters["LogRegisterProtocol(address)"](t)},LogSetMasterContractApproval(t,e,n){return i.filters["LogSetMasterContractApproval(address,address,bool)"](t,e,n)},LogStrategyDivest(t,e){return i.filters["LogStrategyDivest(address,uint256)"](t,e)},LogStrategyInvest(t,e){return i.filters["LogStrategyInvest(address,uint256)"](t,e)},LogStrategyLoss(t,e){return i.filters["LogStrategyLoss(address,uint256)"](t,e)},LogStrategyProfit(t,e){return i.filters["LogStrategyProfit(address,uint256)"](t,e)},LogStrategyQueued(t,e){return i.filters["LogStrategyQueued(address,address)"](t,e)},LogStrategySet(t,e){return i.filters["LogStrategySet(address,address)"](t,e)},LogStrategyTargetPercentage(t,e){return i.filters["LogStrategyTargetPercentage(address,uint256)"](t,e)},LogTransfer(t,e,n,r){return i.filters["LogTransfer(address,address,address,uint256)"](t,e,n,r)},LogWhiteListMasterContract(t,e){return i.filters["LogWhiteListMasterContract(address,bool)"](t,e)},LogWithdraw(t,e,n,r,o){return i.filters["LogWithdraw(address,address,address,uint256,uint256)"](t,e,n,r,o)},OwnershipTransferred(t,e){return i.filters["OwnershipTransferred(address,address)"](t,e)}});function I(a,t){let e=pt(a),n=at("BentoBoxV1",t,e);if(!n){let r=d.connect(t,ot(e));n=new P(r),nt("BentoBoxV1",t,e,n)}return n}import{getPriceByType as dt,token as p}from"@sentio/sdk/utils";var yt=new Map([["ILV-WETH","0x6a091a3406e0073c3cd6340122143009adac0eda"],["USDC-WETH","0x397ff1542f962076d0bfe58ea045ffa2d347aca0"],["WETH-USDT","0x06da0fd433c1a5d7a4faa01111c044910a184553"],["WBTC-WETH","0xceff51756c56ceffca006cd410b03ffc46dd3a58"],["SUSHI-WETH","0x795065dcc9f64b5614c407a6efdc400da6221fb0"],["SYN-WETH","0x4a86c01d67965f8cb3d0aaa2c655705e64097c31"],["USDC-USDT","0xD86A120a06255Df8D4e2248aB04d4267E23aDfaA"]]);async function C(a,t,e,n,r){let o;try{o=await dt(n,t,r)}catch(h){return console.log(h),console.log("get price failed",t,n),j(0)}return a.scaleDown(e.decimal).multipliedBy(o)}var R={sparse:!0,aggregationConfig:{intervalInMinutes:[60]}},gt=A.register("vol",R),mt=A.register("loan",R);yt.forEach((a,t)=>{T.bind({address:a,name:t}).onEventSwap(async(e,n)=>{console.log("swap event",e);let r=e.args.amount0In,o=e.args.amount0Out,m=e.args.amount1In,h=e.args.amount1Out,v=await n.contract.token0({blockTag:"latest"}),b=await n.contract.token1({blockTag:"latest"}),B=await p.getERC20TokenInfo(n,v),M=await p.getERC20TokenInfo(n,b),g=j(0);r>BigInt(0)&&(g=await C(r,v,B,n.chainId.toString(),n.timestamp)),o>BigInt(0)&&(g=await C(o,v,B,n.chainId.toString(),n.timestamp)),m>BigInt(0)&&(g=await C(m,b,M,n.chainId.toString(),n.timestamp)),h>BigInt(0)&&(g=await C(h,b,M,n.chainId.toString(),n.timestamp)),isNaN(g.toNumber())||gt.record(n,g),n.eventLogger.emit("swap",{distinctId:e.args.sender,value:g})})});f.bind({address:"0xF5BCE5077908a1b7370B9ae04AdC565EBd643966"}).onEventLogFlashLoan(async(a,t)=>{let e=await p.getERC20TokenInfo(t,a.args.token),n=a.args.amount,r=await C(n,a.args.token,e,t.chainId.toString(),t.timestamp);isNaN(r.toNumber())||mt.record(t,r),t.eventLogger.emit("flashloan",{distinctId:a.args.borrower,token:e.symbol,value:r})}).onEventLogDeposit(async(a,t)=>{let e=await p.getERC20TokenInfo(t,a.args.token);t.eventLogger.emit("deposit",{distinctId:a.args.from,value:a.args.amount.scaleDown(e.decimal),token:e.symbol,from:a.args.from,to:a.args.to})}).onEventLogWithdraw(async(a,t)=>{let e=await p.getERC20TokenInfo(t,a.args.token);t.eventLogger.emit("withdraw",{distinctId:a.args.to,value:a.args.amount.scaleDown(e.decimal),token:e.symbol,from:a.args.from,to:a.args.to})}).onEventLogStrategyProfit(async(a,t)=>{let e=await p.getERC20TokenInfo(t,a.args.token);t.eventLogger.emit("strategyprofit",{value:a.args.amount.scaleDown(e.decimal),token:e.symbol})}).onEventLogStrategyLoss(async(a,t)=>{let e=await p.getERC20TokenInfo(t,a.args.token);t.eventLogger.emit("strategyloss",{value:a.args.amount.scaleDown(e.decimal),token:e.symbol})}).onEventLogStrategyInvest(async(a,t)=>{let e=await p.getERC20TokenInfo(t,a.args.token);t.eventLogger.emit("strategyinvest",{value:a.args.amount.scaleDown(e.decimal),token:e.symbol})}).onEventLogStrategyDivest(async(a,t)=>{let e=await p.getERC20TokenInfo(t,a.args.token);t.eventLogger.emit("strategydivest",{value:a.args.amount.scaleDown(e.decimal),token:e.symbol})});export{R as volOptions};
//# sourceMappingURL=data:application/json;base64,